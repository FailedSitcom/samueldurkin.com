{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_3423733117","xExtent","d3","yExtent","xScale","domain","range","window","innerWidth","yScale","innerHeight","index","push","style","Math","random","append","attr","selectAll","enter","classed","d","on","this","transition","duration","ease","IndexPage","layout","seo","title","keywords","className","components_image","href","xmlns","width","height","viewBox","m","module","exports","require","default","__webpack_require__","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"iGAqBA,8ECUeA,EAhBD,kBACZC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOF,EAAKG,iBAAiBC,gBAAgBF,SAZpEF,KAAAK,cDTIC,EAAUC,IAAU,CAAC,EAAG,MACxBC,EAAUD,IAAU,CAAC,IAAK,IAE1BE,EAASF,MAEZG,OAAOJ,GACPK,MAAM,CAAC,EAAGC,OAAOC,aACdC,EAASP,MAEZG,OAAOF,GACPG,MAAM,CAACC,OAAOG,YAAa,IAExBf,EAAO,GAEJgB,EAAQ,EAAGA,EAAQ,GAAIA,IAC9BhB,EAAKiB,KAAK,IAMZV,IAAU,QAEPW,MAAM,mBAAoBX,IAAqBY,KAAKC,OAAO,KAC3DC,OAAO,OACPC,KAAK,QAAS,sBACdC,UAAU,OACVvB,KAAKA,GACLwB,QACAH,OAAO,KACPI,QAAQ,gBAAgB,GACxBH,KAAK,YAAa,SAASI,GAC1B,mBAAoBjB,EACe,IAAjCU,KAAKC,OAAOR,OAAOC,aADrB,IAEKC,EAAwC,IAAjCK,KAAKC,OAAOR,OAAOC,aAF/B,MAIDc,GAAG,YAAa,WACfpB,IAAUqB,MAAMN,KAAK,YAAa,SAASI,GACzC,mBAAoBjB,EACe,IAAjCU,KAAKC,OAAOR,OAAOC,aADrB,IAEKC,EAAwC,IAAjCK,KAAKC,OAAOR,OAAOC,aAF/B,QAKHQ,OAAO,UACPI,QAAQ,OAAO,GACfH,KAAK,IAAKf,IAAiB,EAAG,KAC9Be,KAAK,UAAW,SAAAI,GACf,OAAOP,KAAKC,OAAO,KAEpBF,MAAM,OAAQ,SAAAQ,GACb,OAAOnB,IAAqBY,KAAKC,OAAO,MAEzCF,MAAM,eAAgBX,IAAiB,EAAG,IAC1CW,MAAM,SAAU,SAMnBX,IAAa,iBACVsB,aACAC,SAAS,KACTC,KAAKxB,KAELe,KAAK,YAAa,SAASI,GAC1B,mBAAoBjB,EACe,IAAjCU,KAAKC,OAAOR,OAAOC,aADrB,IAEKC,EAAwC,IAAjCK,KAAKC,OAAOR,OAAOC,aAF/B,MAkDWmB,UA7CG,kBAChBtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEC,MAAM,gCACNC,SAAU,gEAQZ1C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,wDACb3C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,4DACb3C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,kEACb3C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACb3C,EAAAC,EAAAC,cAAC0C,EAAD,OAEF5C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACb3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,gDAAd,iBAGA3C,EAAAC,EAAAC,cAAA,MAAIyC,UAAU,qFAAd,iBAGA3C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,kCACb3C,EAAAC,EAAAC,cAAA,KAAG2C,KAAK,mCACN7C,EAAAC,EAAAC,cAAA,OACE4C,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAERjD,EAAAC,EAAAC,cAAA,QAAM8B,EAAE,4uBE9G1B,IAAsBkB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAvB,EAAAwB,EAAA,sBAAAC,IAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAaME,GAbNR,EAAA,IAAAA,EAAA,KAa2BS,IAAMC,cAAc,KAEzCR,EAAc,SAAAS,GAAK,OACvBP,EAAA1D,EAAAC,cAAC6D,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM5D,MACL8D,EAAgBF,EAAM9D,QAAUgE,EAAgBF,EAAM9D,OAAOE,MAEtD4D,EAAM7D,QAAU6D,EAAMG,UAC5BH,EAAM5D,KAAO4D,EAAM5D,KAAKA,KAAO8D,EAAgBF,EAAM9D,OAAOE,MAGvDqD,EAAA1D,EAAAC,cAAA,uCA4BfuD,EAAYa,UAAY,CACtBhE,KAAMiE,IAAUC,OAChBpE,MAAOmE,IAAUE,OAAOC,WACxBrE,OAAQkE,IAAUI,KAClBN,SAAUE,IAAUI,8FC7ChBC,UAAS,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,SAAH,OACbS,EAAA7E,EAAAC,cAAC6E,EAAA,EAAD,CACE3E,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVwE,EAAA7E,EAAAC,cAAA,WACE4E,EAAA7E,EAAAC,cAAA,YAAOmE,KAZb/D,KAAA0E,MAkBFJ,EAAON,UAAY,CACjBD,SAAUE,IAAUU,KAAKP,YAGZE,wMC9BTM,EAAmB,SAAAL,GAAkB,IAAfM,EAAeN,EAAfM,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEpB,IAAM9D,cAAcsF,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBZ,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUQ,6GCbf,SAASW,EAAThB,GAA2D,IAA5CiB,EAA4CjB,EAA5CiB,YAAaC,EAA+BlB,EAA/BkB,KAAMC,EAAyBnB,EAAzBmB,KAAMtD,EAAmBmC,EAAnBnC,SAAUD,EAASoC,EAATpC,MACxCwD,EADiDC,EAAA5F,KACjD2F,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEhB,EAAA7E,EAAAC,cAACmG,EAAApG,EAAD,CACEqG,eAAgB,CACdP,QAEFtD,MAAOA,EACP8D,cAAa,QAAUN,EAAKG,aAAa3D,MACzCuD,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAShE,GAEX,CACEiE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAShE,GAEX,CACE+D,KAAI,sBACJC,QAASN,IAGVS,OACClE,EAASmE,OAAS,EACd,CACEL,KAAI,WACJC,QAAS/D,EAASoE,KAAT,OAEX,IAELF,OAAOZ,KAKhBH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNtD,SAAU,GACVoD,YAAW,IAGbD,EAAIvB,UAAY,CACdwB,YAAavB,IAAUE,OACvBsB,KAAMxB,IAAUE,OAChBuB,KAAMzB,IAAUyC,QAAQzC,IAAUC,QAClC9B,SAAU6B,IAAUyC,QAAQzC,IAAUE,QACtChC,MAAO8B,IAAUE,OAAOC,YAGXmB","file":"component---src-pages-index-js-0bd747962b5889bd1e05.js","sourcesContent":["import React from \"react\"\nimport * as d3 from \"d3\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst xExtent = d3.extent([0, 100])\nconst yExtent = d3.extent([100, 0])\n\nconst xScale = d3\n  .scaleLinear()\n  .domain(xExtent)\n  .range([0, window.innerWidth])\nconst yScale = d3\n  .scaleLinear()\n  .domain(yExtent)\n  .range([window.innerHeight, 0])\n\nconst data = []\n\nfor (let index = 0; index < 50; index++) {\n  data.push({\n    // x: Math.random(window.innerWidth) * 100,\n    // y: Math.random(window.innerHeight) * 100,\n  })\n}\n\nd3.select(\"body\")\n  // .attr(\"class\", \"bg-gray-100\")\n  .style(\"background-color\", d3.interpolateRdYlBu(Math.random(1)))\n  .append(\"svg\")\n  .attr(\"class\", \"background-pattern\")\n  .selectAll(\"dot\")\n  .data(data)\n  .enter()\n  .append(\"g\")\n  .classed(\"circle-group\", true)\n  .attr(\"transform\", function(d) {\n    return `translate(${xScale(\n      Math.random(window.innerWidth) * 100\n    )},${yScale(Math.random(window.innerWidth) * 100)})`\n  })\n  .on(\"mouseover\", function() {\n    d3.select(this).attr(\"transform\", function(d) {\n      return `translate(${xScale(\n        Math.random(window.innerWidth) * 100\n      )},${yScale(Math.random(window.innerWidth) * 100)})`\n    })\n  })\n  .append(\"circle\")\n  .classed(\"dot\", true)\n  .attr(\"r\", d3.randomUniform(1, 20))\n  .attr(\"opacity\", d => {\n    return Math.random(1)\n  })\n  .style(\"fill\", d => {\n    return d3.interpolateRdYlBu(Math.random(1))\n  })\n  .style(\"stroke-width\", d3.randomUniform(1, 3))\n  .style(\"stroke\", \"black\")\n\n// d3.selectAll(\".circle-group\")\n//   .append(\"text\")\n//   .text(\"☕️\")\n\nd3.selectAll(\".circle-group\")\n  .transition() // Wait one second. Then brown, and remove.\n  .duration(4000)\n  .ease(d3.easePolyOut)\n  // .delay(1000)\n  .attr(\"transform\", function(d) {\n    return `translate(${xScale(\n      Math.random(window.innerWidth) * 100\n    )},${yScale(Math.random(window.innerWidth) * 100)})`\n  })\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO\n      title=\"Samuel Durkin - Web Developer\"\n      keywords={[\n        `samuel durkin`,\n        `web developer`,\n        `frontend`,\n        `berlin`,\n        `react`,\n      ]}\n    />\n    <div className=\"flex flex-col content-center justify-center h-screen\">\n      <div className=\"flex content-center justify-center w-screen sm:max-w-4xl\">\n        <div className=\"flex shadow-xl border-t-4 bg-white border-gray-500 rounded p-6\">\n          <div className=\"w-24 pr-4\">\n            <Image />\n          </div>\n          <div className=\"text-left\">\n            <h1 className=\"text-4xl sm:text-5xl font-serif leading-none\">\n              Samuel Durkin\n            </h1>\n            <h2 className=\"text-2xl sm:text-3xl font-light font-sans tracking-tight leading-snug inline-flex\">\n              Web Developer\n            </h2>\n            <div className=\"text-gray-600 inline-flex ml-2\">\n              <a href=\"https://github.com/failedsitcom\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n                </svg>\n              </a>\n              {/* <a href=\"#\">test</a> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"samuel.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <main>{children}</main>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}